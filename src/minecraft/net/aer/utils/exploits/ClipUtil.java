package net.aer.utils.exploits;

import com.darkmagician6.eventapi.EventManager;
import com.darkmagician6.eventapi.EventTarget;
import net.aer.Aer;
import net.aer.events.EventPreEntityUpdate;
import net.aer.render.render2D.ChatColour;
import net.aer.render.render2D.ChatUtils;
import net.aer.utils.player.PlayerUtil;
import net.aer.utils.world.WorldUtil;
import net.minecraft.network.play.client.CPacketPlayer;

public class ClipUtil {

	private static double distanceV;
	private static double distanceH;
	private static boolean run;
	private static boolean msg;
	private static int speed;
	private static String direction;
	private static boolean warp;
	private static boolean warpBackwards;
	private static int warpDist;

	public ClipUtil() {
		EventManager.register(this);
	}


	public boolean Clip(double distanceHIn, double distanceVIn, boolean msgIn, boolean checkBlocks) {
		boolean flag = true;
		direction = PlayerUtil.direction(Aer.minecraft.player);
		distanceH = distanceHIn;
		distanceV = distanceVIn;
		msg = msgIn;
		if (checkBlocks) {
			double check = checkForBlocksAndUpdate(distanceH, direction);
			if (check != distanceH) {
				distanceH = check;
				flag = false;
			}
		}
		run = true;
		return flag;
	}

	public boolean Clip(double distanceHIn, double distanceVIn, boolean msgIn, boolean checkBlocks, String directionIn) {
		boolean flag = true;
		direction = directionIn;
		distanceH = distanceHIn;
		distanceV = distanceVIn;
		msg = msgIn;
		if (checkBlocks) {
			double check = checkForBlocksAndUpdate(distanceH, direction);
			if (check != distanceH) {
				distanceH = check;
				flag = false;
			}
		}
		run = true;
		return flag;
	}


	@EventTarget
	public void onEntityLivingUpdateStart(EventPreEntityUpdate event) {
		if (Aer.minecraft.world != null && Aer.minecraft.player != null) {
			if (!run) {
				return;
			}
			if (direction.equalsIgnoreCase("south")) {
				Aer.minecraft.player.connection.sendPacket(new CPacketPlayer.Position(Aer.minecraft.player.posX, Aer.minecraft.player.posY, Aer.minecraft.player.posZ + 0.0010000000474974513, true));
				Aer.minecraft.player.setPosition(Aer.minecraft.player.posX, Aer.minecraft.player.posY + distanceV, Aer.minecraft.player.posZ + distanceH);
			}
			if (direction.equalsIgnoreCase("north")) {
				Aer.minecraft.player.connection.sendPacket(new CPacketPlayer.Position(Aer.minecraft.player.posX, Aer.minecraft.player.posY, Aer.minecraft.player.posZ - 0.0010000000474974513, true));
				Aer.minecraft.player.setPosition(Aer.minecraft.player.posX, Aer.minecraft.player.posY + distanceV, Aer.minecraft.player.posZ - distanceH);
			}
			if (direction.equalsIgnoreCase("east")) {
				Aer.minecraft.player.connection.sendPacket(new CPacketPlayer.Position(Aer.minecraft.player.posX + 0.0010000000474974513, Aer.minecraft.player.posY, Aer.minecraft.player.posZ, true));
				Aer.minecraft.player.setPosition(Aer.minecraft.player.posX + distanceH, Aer.minecraft.player.posY + distanceV, Aer.minecraft.player.posZ);
			}
			if (direction.equalsIgnoreCase("west")) {
				Aer.minecraft.player.connection.sendPacket(new CPacketPlayer.Position(Aer.minecraft.player.posX - 0.0010000000474974513, Aer.minecraft.player.posY, Aer.minecraft.player.posZ, true));
				Aer.minecraft.player.setPosition(Aer.minecraft.player.posX - distanceH, Aer.minecraft.player.posY + distanceV, Aer.minecraft.player.posZ);
			}
			if (msg) {
				ChatUtils.sendChatMessage("Clipped!", ChatColour.lightPurple, "CMD", true);
			}
			run = false;
		}

	}


	public static double checkForBlocksAndUpdate(double distIn, String direction) {
		double dist = 0;
		double posX = Aer.minecraft.player.posX;
		double posZ = Aer.minecraft.player.posZ;
		double posY = Aer.minecraft.player.posY;
		if (distIn < 0) {
			while (dist > distIn) {
				if (direction.equalsIgnoreCase("NORTH")) {
					posZ += 1;
				} else if (direction.equalsIgnoreCase("EAST")) {
					posX -= 1;
				} else if (direction.equalsIgnoreCase("SOUTH")) {
					posZ -= 1;
				} else if (direction.equalsIgnoreCase("WEST")) {
					posX += 1;
				}

				if (WorldUtil.checkForBlocksAroundPos(posX, posY, posZ)) {
					return dist;
				}

				dist--;

			}
		} else {
			while (dist < distIn) {
				if (direction.equalsIgnoreCase("NORTH")) {
					posZ -= 1;
				} else if (direction.equalsIgnoreCase("EAST")) {
					posX += 1;
				} else if (direction.equalsIgnoreCase("SOUTH")) {
					posZ += 1;
				} else if (direction.equalsIgnoreCase("WEST")) {
					posX -= 1;
				}

				if (WorldUtil.checkForBlocksAroundPos(posX, posY, posZ)) {
					return dist;
				}

				dist++;

			}
		}
		return dist;
	}

}
